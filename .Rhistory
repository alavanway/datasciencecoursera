library("rstudio", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("slidify")
library(ggplot2)
find.packages("devtools")
find.package("devtools")
find.package("slidify")
library(devtools)
search()
find_rtools()
install.packages("kernsmooth")
install.packages("KernSmooth")
library(KernSmooth)
install.packages("Slidify")
install.packages("slidify")
install_github('slidify', 'ramnathv')
install_github('slidifyLibraries', 'ramnathv')
library(Slidify)
search()
library(slidify)
search()
1 + 1
"Arrgh, Matey!"
1>2
1 > 2
1 = 1
1 == 1
2 + 2 == 4
T == TRUE
T == true
X <- 42
x == 42
X == 42
X/2
X
sum(1, 3, 5)
sum(x, 1)
sum(X, 1)
rep(X, times = 3)
sqrt(X)
help(rep)
example(rep)
rep(1:5, times = 2)
rep(1:5, times, 2, len = 8)
rep(1:5, times = 2, len = 8)
rep(1:5, times = 2, each = 3)
list.files()
c(4, 7, 9)
X <- c(4, 7, 9)
X + 1
help(c)
c(rep(1:5, times = 2))
X <- c(rep(1:5, times = 2, each = 2))
X
X + 1
X <- seq(1, 5, .25)
X
X/2
sqrt(X)
c(X+1)
X1 <- c(X+sqrt(X))
X1
X1[4]
X1[4] + X1[4]
X1[4] <- X1[4] - 1
X1[4]
X1[1, 3]
Xq[c(1, 3)]
X1[c(1, 3)]
X1[c(4:8)]
X <- seq(1,3)
names(X) <- c("first", "second", "third")
X
ranks[1]
X[1]
X["first"]
X[2] <- 4
X["first"] <- 2
barplot(X)
X = c(2, 4, 5)
X == c(2, 4, 5)
names(X) = c("First", "Second", "Third")
X
asin(X)
sin(X)
Y <- sin(X)
plot(X,Y)
X = seq(1, 100, .5)
Y = cos(X)
plot(X, Y)
a <- x(1, 2, 3, NA, 5, 6, 7)
a <- c(1, 2, 3, NA, 5, 6, 7)
b <- sin(a)
plot(a, b)
sum(a, na.rm = T)
matrix (1, 3, 4)
a <- seq(1,12)
matrix(sqrt(a), 3, 4)
plank(1,8)
plank <- 1:8
dim(plank) <- c(2,4)
print(plank)
board <- 1:25
dim(board) <- c(5,5)
print(board)
print(a)
dim(a) <- c(3,4)
print(a)
a[1,2]
print(plank)
plank[1,] <- 1:4
print(plank)
print(a)
a[, 2:3]
a[2:3,]
bubbles <- plank[1:2,]
print(bubbles)
contour(a)
contour(plank)
persp(volcano, expand = .2)
contour(volcano)
mean(plank)
image(plank)
image(volcano)
barplot(a)
abline(h = mean(a))
View(a)
pounds <- c(45000, 50000, 35000, 40000, 35000, 45000, 10000, 15000)
barplot(pounds)
meanValue <- mean(pounds)
abline(h = meanValue)
deviation <- sd(pounds)
abline(h = meanValue - 2*deviation)
help(as.integer)
image(volcano)
image(board)
abline(h = mean(board))
barplot(board)
abline(h = mean(board))
types <- factor(chests)
chests <- c('gold', 'silver', 'gems', 'gold', 'gems')
types <- factor(chests)
print(chests)
print(types)
as.integer(types)
levels(types)
gems <- c('diamond', 'emerald', 'agate', 'diamond', 'ruby', 'agate', 'agate')
GIA <- factor(gems)
levels(GIA)
levels(GIA)
as.integers(GIA)
as.integer(GIA)
prices <- c(1000, 500, 250, 1000, 750, 250, 250)
weight <- c(.25, .75, 1, .25, .5, 1, 1)
meTreasure <- data.frame(weight, prices, gems)
print(meTreasure)
meTreasure[[1]]
meTreasure[[3]]
meTreasure[["prices"]]
meTreasure$prices
help(plot)
example(plot)
help(plot)
ls
list.files
list(files)
help(list)
list.files()
dir("datasciencecoursera")
list.files()
dir("datasciencecoursera")
example(read.csv)
FrameTest -< read.csv("datasciencecoursera\FrameTest.csv")
FrameTest <- read.csv("datasciencecoursera\FrameTest.csv")
setwd("/datasciencecousera")
FrameTest <- read.csv("datasciencecoursera/FrameTest.csv")
print(FrameTest)
plot(FrameTest$Value, FrameTest$Height)
cor.test(FrameTest$Value, FrameTest$Height)
line <- lm(FrameTest$Value ~ FrameTest$Height)
plot(line)
abline(line)
help(package = "ggplot2")
help.start()
x <- rnomr(50)
help(rnorm)
x <- rnorm(50)
x <- rnorm(50, mean = 50, sd = 10)
barplot(x)
abline(h = mean(x))
abline()
y = rnorm(x)
y <- rnorm(x)
barplot(y)
plot(x,y)
ls()
rm(x,y)
x <- 1:20
w <- sqrt(x)/2
dummy <- data.frame(x = x, y = x + rnorm(x) * w)
print(dummy)
dummy[[11]]
dummy$x
dummy
fm <- lm(y ~ x, data = dummy)
summary(fm)
plot(dummy)
fml <- lm(y ~ x, data = dummy, weight = 1/w*2)
summary(fml)
plot(fml)
fm1 <- fml
summary(fm1)
attach(dummy)
lrf <- lowess(x, y)
plot(x,y)
lines(x, lrf$y)
summary(lrf)
abline(coef(fm1), col = "red")
detach()
temp <- x > 13
x < 14
x <- 14
temp <- x > 13
x <- 12
temp
temp <- x>13
t
T
?Quotes
\r
"\r"
install.packages("swirl")
library(swirl)
ls
ls()
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
print(my_sqrt)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
bye()
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0, 10, by = .5)
my_seq <- seq(5, 10, length = 30)
length(my_seq)
1:length(my_seq)
seq(1, length = my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(o, times = 40)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2) each = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "JoeMamma")
my_char <- c(my_char, "JoeMamma")
info()
my_name <- c(my_char, "JoeMamma")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,a), 100)
my_data <- sample(c(y, z) 100)
my_data <- sample(c(y, z), 100)
is.na(my_data) -> my_na
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
bye()
install.packages("xlsx")
library(xlsx)
if(!file.exists("data")) {
dir.create("data")
}
fileURL <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileURL, destfile = "./data/camera.csv", method = "curl")
DownloadDate <- date()
CameraData <- read.table("./data/camera.csv", header = TRUE, sep = ",")
CameraData
getwd()
setwd("/Users/alavanwa/datasciencecoursera")
orgDir <- "/Users/alavanwa/datasciencecoursera"
ls()
list.files()
unlink("data", recursive = TRUE)
list.files()
if(!file.exists("data")) {
dir.create("data")
}
fileURLxlsx <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accessType=DOWNLOAD"
download.file(fileURLxlsx, destfile = "./data/cameras.xlsx", method = "curl")
downloadDate <- date()
cameraDataxlsx <- read.xlsx("./data/cameras.xlsx", sheetIndex = 1)
cameraDataxlsx
install.packages("XML")
library(XML)
fileURLXML <- "http://www.w3schools.com/xml/sample.xml"
doc <- xmlTreeParse(fileURLXML, useInternal = TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
doc
doc <- xmlTreeParse(fileRULXML, useInternal = TRUE)
doc <- xmlTreeParse(fileURLXML, useInternal = TRUE)
fileURLXML <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileURLXML, useInternal = TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
rootNode[[2]]
rootNode[[2]][[4]]
length(rootNode)
names(rootNode)
for(i in 1:5) {
items <- character(5)
items[i] <- rootNode[[4]][[4]]
}
class(rootNode[[4]][[4]])
xpathSApply(rootNode, "//Name", xmlValue)
xpathSApply(rootNode, "//name", xmlValue)
xpathSApply(rootNode, "//price", xmlValue)
xpathSApply(rootNode, "//calories", xmlValue)
foodItems <- xpathSApply(rootNode, "//calories", xmlValue)
names(foodItems) <- xpathSApply(rootNode, "//name", xmlValue)
foodItems
as.numeric(foodItems)
data.frame(foodItems)
data.frame(foodItems, xpathSApply(rootNode, "//price", xmlValue)
foodItems
foodPrices <- xpathSApply(rootNode, "//price", xmlValue
foodPrices <-xpathSApply(rootNode, "//price", xmlValue)
names(foodPrices) <- xpathSApply(rootNode, "//name", xmlValue)
data.frame(foodItems, foodPrices)
Q1fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.fil(Q1fileURL, destfile = "./data/Q1.csv", sep = ",")
download.file(Q1fileURL, destfile = "./data/Q1.csv", sep = ",")
download.file(Q1fileURL, destfile = "./data/Q1.csv", method = "curl")
Q1 <- read.table("./data/Q1.csv", sep = ",")
Q1
Q1$VAL
names(Q1)
Q1$V38
Q1 <- read.csv("Q1.csv")
read.csv("./data/Q1.csv")
Q1 <- read.csv"./data/Q1.csv"
Q1 <- read.csv("./data/Q1.csv")
Q1$VAL
millions <- Q1$VAL => 14
millions <- Q1$VAL >= 14
sum(millions, na.rm = TRUE)
millions
sum(millions)
sum(millions, na.rm = TRUE)
millions <- Q1$VAL >= 24
sum(million, na.rm = TRUE)
sum(millions, na.rm = TRUE)
Q1$FES
Q3fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(Q3fileURL, dest = "./data/Q3.xlsx", method = "curl")
dat <- read.xlsx("./data/Q3.xlsx", sheetIndex = 1, colIndex = 7:15, rowIndex = 18:23)
sum(dat$Zip*dat$Ext,na.rm=T)
Q4fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
docQ4 <- xmlTreeParse(Q4fileRUL, useInternal = TRUE)
docQ4 <- xmlTreeParse(Q4fileURL, useInternal = TRUE)
xmlTreeParse
Q3fileURL
Q4fileURL
docQ4 <- xmlTreeParse(Q4fileURL, useInternal = TRUE)
Q4fileURL
docQ4 <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", useInternal = TRUE)
docQ4 <- htmlTreeParse(Q4fileURL, useInternal = TRUE)
install.packages("data.table")
library(data.table)
docQ4 <- xmlTreeParse(Q4fileURL, useInternal = TRUE)
docQ4 <- xmlTreeParse(Q4fileURL, useInternal = TRUE, method = "curl")
Q4fileURL
Q4fileURL <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
docQ4 <- xmlTreeParse(Q4fileURL, useInternal = TRUE)
Q4rootNode <- xmlRoot(docQ4)
Q4rootNode
Q4rootNode[[2]]
ls()
Q4rootNode
xpathSApply(Q4rootNode, "//name", xmlValue)
zipsxml <-xpathSApply(Q4rootNode, "//zipcode", xmlValue)
zipsxml
zips <- as.numeric(zipsxml)
zips
zipstf <- zips == 21231
sum(zipstf)
Q5fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(Q5fileURL, dest = "./data/Q5.csv", method = "curl")
Q5 <- fread("./data/Q5.csv")
names(Q5)
mean(Q5$pwgtp15)
Sys.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(rowMeans(DT)[DT$SEX==1])
DT
DT
DT[,mean(pwgtp15),by=SEX]
library(data.table)
DT
Q5[,mean(pwgtp15),by=SEX]
system.time(rowMeans(Q5)[Q5$SEX==1]; rowMeans(Q5)[Q5$SEX==2])
DT <- fread("./data/Q5.csv")
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
rowMeans(Q5)[Q5$SEX==1]; rowMeans(Q5)[Q5$SEX==2]
DT[,mean(pwgtp15),by=SEX]
sum(millions)
sum(millions, na.rm = TRUE)
Q1$FES
Q1$FES
?levels
levels(Q1$FES)
levels(Q1$FES, na.rm = TRUE)
